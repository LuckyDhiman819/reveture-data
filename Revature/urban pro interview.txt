struct node{
	int data;
	struct node *next;
}

Write code to remove duplicates from an unsorted linked list

6->2->2->6->7->1->6
6->2->7->1

6->2->2->7->1->6
     p3 p1 p2

struct node* duplicate(struct node *head){
	struct node *ptr = head;
	
	
	while(ptr->next != "\0"){
		struct node *ptr1 = head->next;
		struct node *ptr2 = ptr1->next;
		struct node *ptr3 = head;
		while(ptr1->next != "\0"){
			if(ptr->data == ptr1->data){
			// remove
				//free(ptr3->next);
				ptr3->next = ptr2;
				
			}
			else{
				ptr3 = ptr3->next;	
			}
			ptr1 = ptr1->next;		
			ptr2 = ptr2->next;
			

		}
	ptr = ptr->next;
	}
return ptr3;
	

}



Given an array of distinct integer values, count the number of pairs of integers that have difference k. For example, given the array { 1, 7, 5, 9, 2, 12, 3} and the difference k = 2,there are four pairs with difference 2: (1, 3), (3, 5), (5, 7), (7, 9).


1, 7, 5, 9, 2, 12, 3

void func(int arr[], int size, i=0){
	int ptr = 0;
	for(int i = 0; i<size; i++){
		for(int j = i+1; j<size; j++){
			if(arr[j]-arr[i]== 2){
				printf("%d, %d", arr[i], arr[j]);
			}
			else if(arr[i]-arr[j]== 2){
				printf("%d, %d", arr[j], arr[i]);
			}
		}
	}		

}


git@github.com:LuckyDhiman819/Project_0.git
























